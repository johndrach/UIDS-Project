@model ApplicationSettings
@{
    ViewData["Title"] = "ASP.NET Core Introduction";
    ViewData["PageName"] = "intel_aspnetcore";
    ViewData["Category1"] = "Application Intel";
}

<div class="row">
    <div class="col-xl-12">
        <div class="panel">
            <div class="panel-hdr">
                <h1>
                    Introducing @Model.Name 4.0
                </h1>
            </div>
            <div class="panel-container show">
                <div class="panel-content">
                    <p>
                        After the great success of our previous version of @Model.Name we knew we had to do our utmost best to deliver you the latest and greatest when it comes to Bootstrap based theming.
                        Our journey has not been without challenges and at one we decided to completely reboot our approach, not only on how we wanted to setup the template, but also provide a much better customer journey with a strong focus on getting you started quickly, hassle-free!
                        Whether you are a seasoned @Model.Name veteran or a new customer, we got your covered. We retained the unique look and feel of @Model.Name but brought it up to the newest industry standards, supporting the latest versions of your favorite plugins.
                    </p>
                    <h3>
                        Doing more with less
                    </h3>
                    <p>
                        This has been our core motto during the rebuilt of @Model.Name 4.0 and has helped us to stay focused and keep our promise to deliver you a cutting-edge redesign of your favorite Bootstrap template!
                    </p>
                    <p>
                        Part of the rebuilt was to ensure we would be able to provide better out of the box integrations with the most popular tech-stacks for building web applications.
                        You can head over to the <a asp-controller="Info" asp-action="AppFlavors">App Flavors</a> page to see our current selection of frameworks that will be made available upon release.
                        You can expect these to grow over time as we include more choices that have been requested by our community.
                    </p>
                    <p>
                        @Model.Name 4.0 is built with full support for <strong>npm</strong> packages and uses <strong>gulp</strong> to build the site structure.
                        All of this with a strong emphasis on automation and testing to ensure that you not only get a fully fledged solution but a solid framework that meets our own high standards for both building and writing applications.
                    </p>
                    <h3>Template Versions</h3>
                    <p>
                        In the tradition of @Model.Name we also include the following editions with this version:
                    </p>
                    <ul>
                        <li>
                            <strong>@Model.Name 4.0 - Seed</strong>
                            <blockquote>
                                Want to start from scratch and slowly add your site structure and pages?
                                Then <strong>Seed</strong> will be your best starting point.
                            </blockquote>
                        </li>
                        <li>
                            <strong>@Model.Name 4.0 - Demo</strong>
                            <blockquote>
                                Want to checkout all the pages SmartAdmin has to offer, such as Dashboards, Charts, Chat and other cool features?
                                Then <strong>Demo</strong> will allow you to view all the required markup to start planning the features you want to include.
                            </blockquote>
                        </li>
                        <li>
                            <strong>@Model.Name 4.0 - Full</strong>
                            <blockquote>
                                Planning on building a fully fledged out Management Portal with Dashboards and database driven logic and data combined with other cool features?
                                Then <strong>Full</strong> will ensure that you will have all the necessary examples to start building your next big project, including a well adopted architecture and trusted design patterns to guide your every step!
                            </blockquote>
                        </li>
                    </ul>
                    <p>
                        As with the previous version our aim here is to provide you with choice; whether you want it all, or just the bare minimum to get you started.
                        Making sure your way of working is possible and how you want to utilize the template is covered.
                    </p>
                    <p>
                        Over time and with each update of @Model.Name 4.0 we will be extending the amount of functionality to will get added to the <strong>Full</strong> version.
                        After we have established a stable community of users we will launch an initiative to invite you our customers to participate in determining which feature you would like to see implemented as part of the next big @Model.Name update!
                    </p>
                    <h2>Why @Model.Name for @Model.Flavor</h2>
                    <p>
                        ASP.NET Core is a developer friendly platform made up of tools, programming languages, and libraries for building many different types of applications.
                        It is a cross-platform, high-performance, open-source framework for building modern, cloud-based, Internet-connected applications.
                    </p>
                    <p>
                        This philosophy suits @Model.Name and matches our intent on how we want to present it to you our users.
                        Not everyone identifies themselves as a typical user and as such @Model.Name for @Model.Flavor supports both ASP.NET Core MVC as well as ASP.NET Core RazorPages, using C# for server-side logic to provide model-binding and various other scenarios.
                        With ASP.NET Core 3.0 around the corner later this year we decided to use .NET Core 2.2 as the focus of this project.
                        But worry not, once ASP.NET Core 3.0 is fully released we'll be sure to provide you with a sleek update that covers all the newly introduced features to match the capabilities of @Model.Name.
                    </p>
                    <h3>Build secure apps</h3>
                    <p>
                        ASP.NET supports industry standard authentication protocols. Built-in features help protect your apps against cross-site scripting (XSS) and cross-site request forgery (CSRF). It is built on top of a lightweight, high-performance, and modular HTTP request pipeline that deploys and runs to Windows, Linux and MacOS!
                    </p>
                    <p>
                        ASP.NET provides a built-in user database with support for multi-factor authentication and external authentication with Google, Twitter, and more.
                    </p>
                    <h3>Identity Management</h3>
                    <p>
                        We have chosen to add support for ASP.NET Core Identity with this version of @Model.Name to not only give you an out of the box secure experience but also showcase how well we were able to have these two frameworks work together as they were shaped to match the @Model.Name 4.0 appearance.
                        All of this is resting comfortable on the back of ASP.NET EntityFramework Core which has been setup with Migrations support to get you started.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>